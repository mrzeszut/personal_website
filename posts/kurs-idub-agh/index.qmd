---
title: "Kurs dla Studentów AGH"
author: "Mateusz Rzeszutek, PhD"
date: "2024-03-04"
categories: [news, course]
format: 
  html: 
    toc-location: right
    toc: true
    toc-depth: 3
    toc-title: ""
image: "idub_logo_en.jpg"
---

<div style="text-align: justify">

Miło mi informować, że została uruchomiona rekrutacja na kurs pt.

**Zdalne repozytoria i systemy kontroli wersji w projektach uczenia maszynowego.**\
\
Liczba godzin: 60 (realizacja do grudnia 2024), Liczba miejsc: 12,

Kurs jest darmowy. Liczba miejsc ograniczona.

[Formularz rekrutacji](http://www.cr.agh.edu.pl/kursy/ "IDUB")

Zapraszam

**M**

\

## Opis kursu:

Kurs dedykowany jest dla studentów posiadających podstawową wiedzę i umiejętności z zakresu programowania przynajmniej w jednym języku programowania, matematyki i statystyki. Ma on na celu poszerzenie wiedzy i umiejętności z zakresu efektywnej pracy w grupie osób posiadających różne kompetencje i umiejętności (interdyscyplinarne projekty). W ramach kursu zostanie przekazana podstawowa wiedza z zakresu programowania, statystyki, przetwarzania danych i uczenia maszynowego w celu wyrównania różnic programowych. Zostaną poszerzenie kompetencji studentów posiadających specjalistyczną wiedzę dziedzinową, ale nie posiadających typowych kompetencji z zakresu informatyki i uczenia maszynowego. Po zakończeniu kursu student będzie przygotowany do pracy w zespołach składających się z wykwalifikowanych specjalistów z zakresu analizy danych i programowania przy zastosowaniu zdalnych repozytoriów i systemów kontroli wersji. Ponadto będzie biegle posługiwał się następującymi narzędziami: R, Rstudio, Git, GitKraken, GitHub.

\
\
\

## Zakres kursu:

\

### 1. Programowanie

------------------------------------------------------------------------

-   Konfiguracja Środowiska Programistycznego: instalacja; interfejs i systemu pomocy; podstawowe komendy.
-   Wprowadzenie do programowania w R: obiekty i operacje; przetwarzanie i wizualizacja danych.

------------------------------------------------------------------------

### 2. Komunikacja w projektach uczenia maszynowego

------------------------------------------------------------------------

-   Projekt Quarto: tworzenie projektu; formaty projektów; modyfikacje stylu projektu.\
-   Składnia Markdown w Quarto: formatowanie; nagłówki; bloki kodu; linki; listy; tabele; rysunki; równania; cytowania.

------------------------------------------------------------------------

### 3. Systemy kontroli wersji

------------------------------------------------------------------------

-   prowadzenie do systemów kontroli wersji: informacje o kontroli wersji; różnice między Git i GitHub oraz rolami, które spełnią w cyklu projektu ML.
-   Tworzenie i modyfikowanie projektu w git: tworzenie projektu; śledzenie zmian; naprawianie prostych błędów; odzyskanie usuniętych plików.
-   Przepływ pracy: klonowanie repozytorium; „wypychanie” zmian; umieszczanie zmian w przechowalni; ściąganie zmian od innych użytkowników.
-   Edytowanie kodu, rozgałęzienia i łączenia: tworzenie rozgałęzień i przełączanie między nimi; łączenie rozgałęzień; podstawowe techniki rozwiązywania konfliktów scalania.

------------------------------------------------------------------------

### 4. Zdalne repozytoria

------------------------------------------------------------------------

-   Wprowadzenie do zdalnych repozytoriów: rejestracja konta; komunikacja ze społecznością; zarządzanie powiadomieniami; tworzenia oddziałów; wykonywania zatwierdzeń; wprowadzanie zmian w projekcie; rozwidlenia repozytorium i klony; funkcjonalność etykiet; zastosowanie problemów.
-   Współpraca systemów kontroli wersji oraz zdalnych repozytoriów w Rstudio: integracja Git i GitHub z RStudio; osobisty token dostępu; metody zakładania, klonowanie i kopiowania repozytoriów; obsługa Git z poziomu RStudio.

------------------------------------------------------------------------

### 5. Uporządkowany przepływ pracy projektach uczenia maszynowego

------------------------------------------------------------------------

-   Tworzenie modeli.
-   Przygotowanie i przetwarzanie danych za pomocą tzw. recipe.
-   Ocena modelu z zastosowaniem tzw. resamplingu.
-   Strojenie parametrów modelu.
-   Studium przypadku modelu predykcyjnego.

------------------------------------------------------------------------

### 6. Projekt **CalPM**

------------------------------------------------------------------------

Projekt uczenia maszynowego z naciskiem na wykształcenie umiejętności zastosowania przekazanej wiedzy z zakresu zdalnych repozytoriów i systemów kontroli wersji oraz komunikacji, współpracy i dyspozycji zadań wewnątrz zespołu.

-   Sformułowanie indywidualnych problemów badawczych.
-   Dyskusja dotycząca metod realizacji projektu.
-   Prezentacja z realizacji projektu w kontekście komunikacji, powierzania obowiązków, terminów realizacji i synchronizacji działań.
-   Prezentacja końcowa efektów projektu, dyskusja dotycząca napotkanych problemów.

------------------------------------------------------------------------

### 7. Projekt **Normalise**

------------------------------------------------------------------------

Realizacja projektu uczenia maszynowego z naciskiem na komunikację i współpracę z odbiorcą projektu. Cykl spotkań z odbiorcą projektu.

-   Definicja problemu i sformułowanie efektu, który chce osiągnąć klient.
-   Analiza dostępnych zasobów i możliwości realizacji projektu.
-   Przedstawienie wstępnego rozwiązania – dyskusja, definicja problemów, wstępna ocena możliwości uzyskania zakładanego efektu.
-   Finalne przedstawienie uzyskanych efektów realizacji projektu.
